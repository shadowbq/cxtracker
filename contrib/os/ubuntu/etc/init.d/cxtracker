#!/bin/sh
# Example init file for debian/ubuntu systems
### BEGIN INIT INFO
# Provides:          cxtracker
# Required-Start:    $network
# Required-Stop:     $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Network Connection Tracker
# Description:       This is a network security tool designed to 
#                    collect statistical information about network traffic
### END INIT INFO

CXT_INTERFACE="eth0"

# Source function library.
if [ -r /etc/default/cxtracker ]; then
  . /etc/default/cxtracker
fi

# We'll add up all the options above and use them
NAME=cxtracker
DAEMON=/usr/bin/$NAME
PIDFILE=/var/run/${NAME}-${CXT_INTERFACE}.pid

# See how we were called.
case "$1" in
  start)
#	chown -R ${CXT_UID}.${CXT_GID} ${CXT_ARCHIVE_DIR}/
	echo -n "Starting $NAME ..."
        $DAEMON $CXT_ARCHIVE_DIR $CXT_INTERFACE $CXT_USER $CXT_GROUP $CXT_BPF >> /var/log/$NAME.log  2>&1 &
	PID1=$!
        echo "$PID1" > $PIDFILE
	echo " done."
	;;
  stop)
        echo -n "Stopping $NAME ..."
	start-stop-daemon --oknodo --stop --quiet --pidfile=$PIDFILE --exec $DAEMON
	rm -f $PIDFILE 2>&1 &
	echo " done."
	;;
  status)
        # Show the stats/counters
	if [ -s $PIDFILE ]; then
	  echo -n "$NAME running with PID "
          cat $PIDFILE
	  #echo -n "Dumping $NAME stats"
	  #kill -USR1 `cat $PIDFILE`
          #echo " done."
	else 
	  echo "$NAME not running!"
        fi
	;;
  now)
        # Dump all on-going connections 
	echo -n "Dumping $NAME connections going on right now"
	kill -USR2 `cat $PIDFILE`
        echo " done."
	;;
  hup)
        # Make certain all is running
	echo -n "HUP'ing $NAME "
#        chown -R ${CXT_UID}.${CXT_GID} ${CXT_ARCHIVE_DIR}/
	kill -HUP `cat $PIDFILE` 
        echo " done."
	;;
  restart)
        $0 stop
        $0 start
        ;;
  force-reload)
        $0 stop
        $0 start
        ;;
  *)
        echo "Usage: $0 {start|stop|restart|status|now|hup|force-reload}"
        exit 1
esac

exit 0
